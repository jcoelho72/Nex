name: Build and Deploy to GitHub Pages

on:
  push:
    branches:
      - master 

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do código com histórico completo para podermos fazer commits
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      # 2. Instalação do Emscripten
      - name: Setup Emscripten
        run: |
          sudo apt-get update
          sudo apt-get install -y emscripten
          # Caso o pacote do Emscripten não seja o ideal ou precise de mais configurações,
          # confira as instruções oficiais:
          # https://emscripten.org/docs/getting_started/downloads.html

      # 3. Compilação da aplicação com o Makefile
      - name: Build with Makefile
        run: make

      # 4. Deploy para a branch gh-pages
      - name: Deploy to gh-pages
        run: |
          # Configura o Git para a identificação do bot
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # Muda para a branch gh-pages
          git checkout gh-pages
          
          # Comando para apagar todos os arquivos (tracked) que NÃO sejam os desejados:
          # Este comando lista os arquivos com `git ls-files`, filtra (via grep) todos
          # que não sejam nex.html, nex.js ou nex.wasm e os remove com git rm.
          git ls-files | grep -vE '^(nex\.html|nex\.js|nex\.wasm)$' | xargs git rm -f
          
          # Adiciona os três arquivos (mesmo que não estejam modificados, o git add -f
          # garante que eles sejam inseridos na staging area)
          git add nex.html nex.js nex.wasm
          
          # Faz o commit com uma mensagem de deploy
          git commit -m "Deploy updated web files"
          
          # Faz o push da branch gh-pages
          git push origin gh-pages
